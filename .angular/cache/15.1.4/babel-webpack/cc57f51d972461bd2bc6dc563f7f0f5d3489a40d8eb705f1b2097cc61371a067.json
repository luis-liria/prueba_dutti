{"ast":null,"code":"import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport * as starpageActions from '../actions/starpage.actions';\nimport { mergeMap, map, catchError, tap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { ShipsService } from 'src/app/services/ships.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/services/ships.service\";\nexport let StarspageEffects = /*#__PURE__*/(() => {\n  class StarspageEffects {\n    constructor(actions$, shipsService) {\n      this.actions$ = actions$;\n      this.shipsService = shipsService;\n      this.cargarStarchipsPage$ = createEffect(() => this.actions$.pipe(ofType(starpageActions.cargarStarPage), mergeMap(action => this.shipsService.getShipsPage(action.page).pipe(tap(data => console.log('page', data)), map(starships => starpageActions.cargarStarSuccess({\n        starships: starships\n      })), catchError(err => of(starpageActions.cargarStarError({\n        payload: err\n      })))))));\n    }\n  }\n  StarspageEffects.ɵfac = function StarspageEffects_Factory(t) {\n    return new (t || StarspageEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.ShipsService));\n  };\n  StarspageEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StarspageEffects,\n    factory: StarspageEffects.ɵfac\n  });\n  return StarspageEffects;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}